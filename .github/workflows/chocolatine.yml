name: chocolatine

env:
    MIRROR_URL: git@github.com:EpitechPromo2028/B-DOP-200-NCY-2-1-chocolatine-laszlo.serdet.git
    EXECUTABLES: chocolatine

on:
    push:
      branches-ignore:
          - "ga-ignore-*"
    pull_request:
      branches-ignore:
          - "ga-ignore-*"

jobs:
    # Checks for coding-style errors.
    check_coding_style:
        if: ${{ github.repository != 'B-DOP-200-NCY-2-1-chocolatine-*' }}
        runs-on: ubuntu-latest
        container: ghcr.io/epitech/coding-style-checker:latest

        steps:
            - name: Checking repositoty
              uses: actions/checkout@v4
              with:
                repository: ''
            - name: Runs coding-style report
              run: |
                check.sh . .
                $codingstyle=coding-style-reports.log
                while IFS= read -r -a line; do
                    fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
                    echo "::error title=${fields[2]} coding style error,file=${fields[0]},line=${fields[1]}::${fields[3]}"
                done < $codingstyle
            - name: Checking coding-style errors
              run: |
                if [ -z coding-style-reports.log ]; then
                    exit 1
                fi

    # Checks that project actually compiles
    check_program_compilation:
        if: ${{ github.repository != 'B-DOP-200-NCY-2-1-chocolatine-*' }}
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        needs: check_coding_style
        timeout-minutes: 2

        steps:
            - name: Checking repositoty
              uses: actions/checkout@v4
              with:
                repository: ''
            - name: Builds project
              run: |
                make
            - name: Clean project
              run: |
                make clean
            - name: Checking permissions
              run: |
                for executables in $EXECUTABLES; do
                    if [ ! - x ]; then
                        exit 1
                    fi
                done

    # Launches unit tests
    run_tests:
        if: ${{ github.repository != 'B-DOP-200-NCY-2-1-chocolatine-*' }}
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        needs: check_program_compilation

        steps:
          - name: Checking repositoty
            uses: actions/checkout@v4
            with:
              repository: ''
          - name: Running unit tests
            run: |
              make tests_run

    # Redirects to Epitech's repository.
    push_to_mirror:
        if: ${{ github.repository != 'B-DOP-200-NCY-2-1-chocolatine-*' }}
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker
        needs: run_tests

        steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - uses: pixta-dev/repository-mirroring-action@v1
          with:
            ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
            target_repo_url: $MIRROR_URL
